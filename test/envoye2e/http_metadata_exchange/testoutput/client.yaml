node:
  id: test-client
  metadata: {
    "NAMESPACE": "default",
    "INCLUDE_INBOUND_PORTS": "9080",
    "app": "productpage",
    "EXCHANGE_KEYS": "NAME,NAMESPACE,INSTANCE_IPS,LABELS,OWNER,PLATFORM_METADATA,WORKLOAD_NAME,CANONICAL_TELEMETRY_SERVICE,MESH_ID,SERVICE_ACCOUNT",
    "INSTANCE_IPS": "10.52.0.34,fe80::a075:11ff:fe5e:f1cd",
    "pod-template-hash": "84975bc778",
    "INTERCEPTION_MODE": "REDIRECT",
    "SERVICE_ACCOUNT": "bookinfo-productpage",
    "CONFIG_NAMESPACE": "default",
    "version": "v1",
    "OWNER": "kubernetes://apis/apps/v1/namespaces/default/deployments/productpage-v1",
    "WORKLOAD_NAME": "productpage-v1",
    "ISTIO_VERSION": "1.3-dev",
    "kubernetes.io/limit-ranger": "LimitRanger plugin set: cpu request for container productpage",
    "POD_NAME": "productpage-v1-84975bc778-pxz2w",
    "istio": "sidecar",
    "PLATFORM_METADATA": {
     "gcp_cluster_name": "test-cluster",
     "gcp_project": "test-project",
     "gcp_cluster_location": "us-east4-b"
    },
    "LABELS": {
     "app": "productpage",
     "version": "v1",
     "pod-template-hash": "84975bc778"
    },
    "ISTIO_PROXY_SHA": "istio-proxy:47e4559b8e4f0d516c0d17b233d127a3deb3d7ce",
    "NAME": "productpage-v1-84975bc778-pxz2w",
  }
stats_config:
  use_all_default_tags: true
  stats_tags:
  - tag_name: "reporter"
    regex: "(reporter=\\.=(.+?);\\.;)"
  - tag_name: "source_namespace"
    regex: "(source_namespace=\\.=(.+?);\\.;)"
  - tag_name: "source_workload"
    regex: "(source_workload=\\.=(.+?);\\.;)"
  - tag_name: "source_workload_namespace"
    regex: "(source_workload_namespace=\\.=(.+?);\\.;)"
  - tag_name: "source_principal"
    regex: "(source_principal=\\.=(.+?);\\.;)"
  - tag_name: "source_app"
    regex: "(source_app=\\.=(.+?);\\.;)"
  - tag_name: "source_version"
    regex: "(source_version=\\.=(.+?);\\.;)"
  - tag_name: "destination_namespace"
    regex: "(destination_namespace=\\.=(.+?);\\.;)"
  - tag_name: "destination_workload"
    regex: "(destination_workload=\\.=(.+?);\\.;)"
  - tag_name: "destination_workload_namespace"
    regex: "(destination_workload_namespace=\\.=(.+?);\\.;)"
  - tag_name: "destination_principal"
    regex: "(destination_principal=\\.=(.+?);\\.;)"
  - tag_name: "destination_app"
    regex: "(destination_app=\\.=(.+?);\\.;)"
  - tag_name: "destination_version"
    regex: "(destination_version=\\.=(.+?);\\.;)"
  - tag_name: "destination_service"
    regex: "(destination_service=\\.=(.+?);\\.;)"
  - tag_name: "destination_service_name"
    regex: "(destination_service_name=\\.=(.+?);\\.;)"
  - tag_name: "destination_service_namespace"
    regex: "(destination_service_namespace=\\.=(.+?);\\.;)"
  - tag_name: "destination_port"
    regex: "(destination_port=\\.=(.+?);\\.;)"
  - tag_name: "request_protocol"
    regex: "(request_protocol=\\.=(.+?);\\.;)"
  - tag_name: "response_code"
    regex: "(response_code=\\.=(.+?);\\.;)|_rq(_(\\.d{3}))$"
  - tag_name: "response_flags"
    regex: "(response_flags=\\.=(.+?);\\.;)"
  - tag_name: "grpc_response_status"
    regex: "(grpc_response_status=\\.=(.*?);\\.;)"
  - tag_name: "connection_security_policy"
    regex: "(connection_security_policy=\\.=(.+?);\\.;)"
  - tag_name: "cache"
    regex: "(cache\\.(.+?)\\.)"
  - tag_name: "component"
    regex: "(component\\.(.+?)\\.)"
  - tag_name: "tag"
    regex: "(tag\\.(.+?);\\.)"
admin:
  access_log_path: /tmp/envoy-client-access.log
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 20081
static_resources:
  clusters:
  - name: client
    connect_timeout: 5s
    type: STATIC
    load_assignment:
      cluster_name: client
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 20083
    filters:
    - name: envoy.filters.network.upstream.metadata_exchange
      typed_config: 
        "@type": type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio2  
    tls_context:
      common_tls_context:
        alpn_protocols:
        - istio2
        tls_certificates:
        - certificate_chain: { filename: "testdata/certs/cert-chain.pem" }
          private_key: { filename: "testdata/certs/key.pem" }
        validation_context:
          trusted_ca: { filename: "testdata/certs/root-cert.pem" }
  listeners:
  - name: app-to-client
    traffic_direction: OUTBOUND
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 20082
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: AUTO
          stat_prefix: inbound_http
          access_log:
          - name: envoy.file_access_log
            config:
              path: /tmp/envoy-client-access.log
          http_filters:
          - name: envoy.filters.http.wasm
            config:
              config:
                root_id: "stats_outbound"
                vm_config:
                  runtime: envoy.wasm.runtime.null
                  code:
                    local: { inline_string: "envoy.wasm.stats" }
                configuration: |
                  { "debug": "false", max_peer_cache_size: 20, field_separator: ";.;" }
          - name: envoy.router
          route_config:
            name: app-to-client-route
            virtual_hosts:
            - name: app-to-client-route
              domains: ["*"]
              routes:
              - match:
                  prefix: /
                route:
                  cluster: client
                  timeout: 0s
      tls_context:
        common_tls_context:
          alpn_protocols:
          - istio2
          tls_certificates:
          - certificate_chain: { filename: "testdata/certs/cert-chain.pem" }
            private_key: { filename: "testdata/certs/key.pem" }
          validation_context:
            trusted_ca: { filename: "testdata/certs/root-cert.pem" }
        require_client_certificate: true