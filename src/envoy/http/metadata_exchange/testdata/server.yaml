node:
  id: test-server-ratings
  metadata: {
    "NAMESPACE": "default",
    "INCLUDE_INBOUND_PORTS": "9080",
    "app": "ratings",
    "EXCHANGE_KEYS": "NAME,NAMESPACE,INSTANCE_IPS,LABELS,OWNER,PLATFORM_METADATA,WORKLOAD_NAME,CANONICAL_TELEMETRY_SERVICE,MESH_ID,SERVICE_ACCOUNT",
    "INSTANCE_IPS": "10.52.0.34,fe80::a075:11ff:fe5e:f1cd",
    "pod-template-hash": "84975bc778",
    "INTERCEPTION_MODE": "REDIRECT",
    "SERVICE_ACCOUNT": "bookinfo-ratings",
    "CONFIG_NAMESPACE": "default",
    "version": "v1",
    "OWNER": "kubernetes://api/apps/v1/namespaces/default/deployment/ratings-v1",
    "WORKLOAD_NAME": "ratings-v1",
    "ISTIO_VERSION": "1.3-dev",
    "kubernetes.io/limit-ranger": "LimitRanger plugin set: cpu request for container ratings",
    "POD_NAME": "ratings-v1-84975bc778-pxz2w",
    "istio": "sidecar",
    "PLATFORM_METADATA": {
     "gcp_cluster_name": "/redacted/",
     "gcp_project": "/redacted/",
     "gcp_cluster_location": "us-east4-b"
    },
    "LABELS": {
     "app": "ratings",
     "version": "v1",
     "pod-template-hash": "84975bc778"
    },
    "ISTIO_PROXY_SHA": "istio-proxy:47e4559b8e4f0d516c0d17b233d127a3deb3d7ce",
    "NAME": "ratings-v1-84975bc778-pxz2w",
  }
static_resources:
  listeners:
  - name: server
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8081
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: ingress_http
          codec_type: auto
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route: 
                  cluster: web_service
          http_filters:
          - name: envoy.wasm
            config:
              vm_config:
                vm: "envoy.wasm.vm.null"
                code:
                  inline_string: "envoy.wasm.metadata_exchange"
              configuration: "test"
          - name: envoy.router
            config: {}
          access_log:
          - name: envoy.file_access_log
            config:
              path: "/dev/stdout"
              format: "server %RESPONSE_CODE% downstream_id:%DYNAMIC_METADATA(envoy.wasm.metadata_exchange.downstream_id)% downstream:%DYNAMIC_METADATA(envoy.wasm.metadata_exchange.downstream)% upstream_id:%DYNAMIC_METADATA(envoy.wasm.metadata_exchange.upstream_id)% upstream:%DYNAMIC_METADATA(envoy.wasm.metadata_exchange.upstream)%\n"
  - name: staticreply
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 8099
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: ingress_http
          codec_type: auto
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                direct_response:
                  status: 200
                  body:
                    inline_string: "example body\n"
          http_filters:
          - name: envoy.router
            config: {}
          access_log:
          - name: envoy.file_access_log
            config:
              path: "/dev/stdout"
              format: "origin %RESPONSE_CODE% downstream:%REQ(x-envoy-peer-metadata-id)% downstream:%REQ(x-envoy-peer-metadata)%\n"
 
  clusters:
  - name: web_service
    connect_timeout: 0.25s
    type: static
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: 127.0.0.1
        port_value: 8099
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8002
